<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration file="C:\Desktop\face detection and tracking ,recongizaton\face detection on image\Face_Detection.prj" location="C:\Desktop\face detection and tracking ,recongizaton\face detection on image" name="Face_Detection" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>Face_Detection</param.appname>
    <param.icon />
    <param.icons />
    <param.version>1.0</param.version>
    <param.authnamewatermark>Abdallah Alaba</param.authnamewatermark>
    <param.email>abdullahalaba13@gmail.com</param.email>
    <param.company>zagzig Faculty of engneering</param.company>
    <param.summary>Project Summary: Iris Detection GUI in MATLAB using App Designer

The project focuses on developing an iris detection system using MATLAB. I</param.summary>
    <param.description>Project Summary: Iris Detection GUI in MATLAB using App Designer

The project focuses on developing an iris detection system using MATLAB. Initially, a graphical user interface (GUI) was designed for this purpose, which provides users with an interactive platform to load and process iris images. The system uses image processing techniques to detect the iris region in the eye image, facilitating biometric authentication or medical applications.

The next step in the project is to convert the existing GUI into a standalone application using MATLAB's App Designer. This transition will allow the iris detection system to be more user-friendly, portable, and easily executable without requiring MATLAB's full development environment. The application will be self-contained, with all necessary functionalities embedded in the app, including image input, processing, and output display.

Key steps include:

Transforming the existing GUI to an app using MATLAB App Designer.

Ensuring the app can run independently with all features functioning seamlessly.

Streamlining the user interface for ease of use.

The ultimate goal of the project is to develop a robust iris detection system that can be used in various real-world scenarios, such as security systems or health-related applications.</param.description>
    <param.screenshot>C:\Pictures\Screenshots\Screenshot 2025-04-23 195426.png</param.screenshot>
    <param.guid />
    <param.installpath.string>\zagzig Faculty of engneering\Face_Detection\</param.installpath.string>
    <param.installpath.combo>option.installpath.programfiles</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes />
    <param.intermediate>${PROJECT_ROOT}\Face_Detection\for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}\Face_Detection\for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}\Face_Detection\for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}\Face_Detection</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>MyAppInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>true</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments 
 Description 
 	 Project Summary: Iris Detection GUI in MATLAB using App Designer

The project focuses on developing an iris detection system using MATLAB. Initially, a graphical user interface (GUI) was designed for this purpose, which provides users with an interactive platform to load and process iris images. The system uses image processing techniques to detect the iris region in the eye image, facilitating biometric authentication or medical applications.

The next step in the project is to convert the existing GUI into a standalone application using MATLAB's App Designer. This transition will allow the iris detection system to be more user-friendly, portable, and easily executable without requiring MATLAB's full development environment. The application will be self-contained, with all necessary functionalities embedded in the app, including image input, processing, and output display.

Key steps include:

Transforming the existing GUI to an app using MATLAB App Designer.

Ensuring the app can run independently with all features functioning seamlessly.

Streamlining the user interface for ease of use.

The ultimate goal of the project is to develop a robust iris detection system that can be used in various real-world scenarios, such as security systems or health-related applications.</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.version />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.target.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.web.mcr.name />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\Face_Detection.mlapp</file>
    </fileset.main>
    <fileset.resources />
    <fileset.package />
    <fileset.depfun />
    <build-deliverables>
      <file location="${PROJECT_ROOT}\Face_Detection\for_testing" name="readme.txt" optional="true">C:\Desktop\face detection and tracking ,recongizaton\face detection on image\Face_Detection\for_testing\readme.txt</file>
      <file location="${PROJECT_ROOT}\Face_Detection\for_testing" name="Face_Detection.exe" optional="false">C:\Desktop\face detection and tracking ,recongizaton\face detection on image\Face_Detection\for_testing\Face_Detection.exe</file>
      <file location="${PROJECT_ROOT}\Face_Detection\for_testing" name="splash.png" optional="false">C:\Desktop\face detection and tracking ,recongizaton\face detection on image\Face_Detection\for_testing\splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>C:\D_Matlab</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="polyspacebugfinder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <polyspacebugfinder>
          <enabled>true</enabled>
        </polyspacebugfinder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>